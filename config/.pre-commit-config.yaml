repos:
  - repo: local
    hooks:
      - id: rule-compliance-check
        name: Rule Compliance Check
        entry: scripts/rule-compliance-check.sh
        language: script
        types: [yaml, json, python, markdown, text]
        pass_filenames: false
        always_run: true
        description: "Check for deterministic editing compliance and coding standards"

      - id: mdc-linter
        name: MDC File Linter
        entry: python scripts/mdc-linter.py
        language: system
        types: [text]
        files: \.mdc$
        description: "Validate .mdc files for proper YAML frontmatter structure"

      - id: security-check
        name: Security Check
        entry: scripts/security-check.sh
        language: script
        types: [yaml, json, python]
        pass_filenames: false
        always_run: true
        description: "Check for hardcoded credentials and security vulnerabilities"

      - id: check-hardcoded-urls
        name: Check for Hardcoded URLs
        entry: bash -c 'grep -r "snowflakecomputing.com" . --exclude-dir=.git --exclude-dir=node_modules --exclude=*.log && exit 1 || exit 0'
        language: system
        types: [yaml, json, python]
        pass_filenames: false
        always_run: true
        description: "Check for hardcoded Snowflake URLs"

      - id: check-uuid-patterns
        name: Check for UUID Patterns
        entry: bash -c 'grep -r "[0-9a-f]\{8\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{4\}-[0-9a-f]\{12\}" . --exclude-dir=.git --exclude-dir=node_modules --exclude=*.log && exit 1 || exit 0'
        language: system
        types: [yaml, json, python]
        pass_filenames: false
        always_run: true
        description: "Check for hardcoded UUID patterns"

      - id: check-aws-keys
        name: Check for AWS Keys
        entry: bash -c 'grep -r "AKIA[0-9A-Z]\{16\}" . --exclude-dir=.git --exclude-dir=node_modules --exclude=*.log && exit 1 || exit 0'
        language: system
        types: [yaml, json, python]
        pass_filenames: false
        always_run: true
        description: "Check for hardcoded AWS credentials"

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: |
          (?x)^(
              models/Openflow-Playground\.yaml|
              \.yaml-lint-ignore|
              \.git/|
              node_modules/
          )$
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=100']
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
              \.secrets\.baseline|
              \.git/|
              node_modules/|
              \.venv/|
              venv/|
              env/|
              \.env
          )$

  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3
        types: [python]

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, ., -f, json, -o, bandit-report.json]
        exclude: |
          (?x)^(
              \.git/|
              node_modules/|
              \.venv/|
              venv/|
              env/|
              tests/|
              test_|
              _test\.py
          )$

  - repo: https://github.com/pre-commit/mirrors-yapf
    rev: v0.40.0
    hooks:
      - id: yapf
        types: [python]

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
      - id: pyupgrade
        args: [--py38-plus]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        exclude: |
          (?x)^(
              \.git/|
              node_modules/|
              \.venv/|
              venv/|
              env/|
              tests/|
              test_|
              _test\.py
          )$

  - repo: local
    hooks:
      - id: cfn-lint
        name: CloudFormation Lint
        entry: cfn-lint
        language: system
        types: [yaml]
        files: |
          (?x)^(
              models/Openflow-Playground\.yaml|
              .*\.template\.yaml|
              .*\.template\.yml|
              .*cloudformation.*\.yaml|
              .*cloudformation.*\.yml
          )$
        description: "Validate CloudFormation templates with cfn-lint" 

  - repo: local
    hooks:
      - id: type-safety
        name: Type Safety Check
        entry: make type-safety
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit, push] 