# .ruff.toml
# AI-powered Python linter configuration

target-version = "py39"
line-length = 88

# Enable AI-powered features
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # bandit
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "PTH", # flake8-use-pathlib
    "LOG", # flake8-logging-format
    "G",   # flake8-logging
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "DTZ", # flake8-datetimez
    "TZ",  # flake8-time
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "NPY", # flake8-numpy
    "AIR", # flake8-airflow
    "PERF", # perflint
    "FURB", # refurb
    "TRY", # tryceratops
    "FLY", # flynt
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "C90", # mccabe
]

# Ignore specific rules
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W503",  # line break before binary operator
    "E203",  # whitespace before ':'
]

# Allow autofix for all rules
fixable = ["ALL"]

# Unfixable rules
unfixable = []

# Exclude files
exclude = [
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

# Per-file-ignores
[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["S101", "S603", "S607"]
"docs/**/*.py" = ["E501"]

# Import sorting
[tool.ruff.isort]
known-first-party = ["src"]
known-third-party = ["pytest", "black", "flake8", "mypy"]

# Type checking
[tool.ruff.flake8-type-checking]
# Enable all type checking rules
extend-select = ["TCH"]
