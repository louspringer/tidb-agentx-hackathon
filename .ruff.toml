# .ruff.toml
# Practical Python linter configuration

target-version = "py39"
line-length = 88

# Enable essential rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # bandit
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "T20", # flake8-print
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "PTH", # flake8-use-pathlib
    "LOG", # flake8-logging-format
    "G",   # flake8-logging
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "DTZ", # flake8-datetimez
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
]

# Ignore specific rules - practical exclusions
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E203",  # whitespace before ':'
    "T201",  # print found
    "EXE001", # shebang present but file not executable
    "S110",  # try-except-pass detected
    "B007",  # loop control variable not used
    "PTH118", # os.path.join should be replaced by Path
    "BLE001", # do not catch blind exception
    "S603",  # subprocess call: check for execution of untrusted input
    # Practical exclusions for common patterns
    "S101",  # assert statements (common in tests)
    "G004",  # f-string logging (acceptable for logging)
    "N806",  # variable names in functions (test-specific)
    "PTH123", # open() vs Path.open() (minor preference)
    "DTZ005", # datetime timezone issues (minor)
    "DTZ003", # datetime timezone issues (minor)
    "DTZ007", # datetime timezone issues (minor)
    "S607",  # security issues (handled separately)
    "S604",  # security issues (handled separately)
    "S105",  # security issues (handled separately)
    "S324",  # security issues (handled separately)
    "S306",  # security issues (handled separately)
    "S104",  # binding to all interfaces (development)
    "B904",  # exception chaining (minor)
    "ARG001", # unused arguments (test-specific)
    "ARG002", # unused arguments (test-specific)
    "F811",  # import issues (test-specific)
    "F821",  # import issues (test-specific)
    "F403",  # import issues (test-specific)
    "F405",  # import issues (test-specific)
    "N999",  # module names (generated files)
    "SLF001", # private member access (test-specific)
    "EXE005", # shebang placement (test-specific)
    "E402",  # import order (test-specific)
    "E722",  # bare except (test-specific)
    "S112",  # try-except-continue (acceptable)
    "SIM102", # simplification (minor)
    "SIM105", # simplification (minor)
    "SIM117", # simplification (minor)
    "COM818", # trailing commas (minor)
    "E902",  # No such file or directory (pre-commit hook issue)
]

# Allow autofix for all rules
fixable = ["ALL"]

# Exclude files
exclude = [
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    # Problematic files with syntax errors
    ".cursor/plugins/rule-compliance-checker.py.backup4",
    ".cursor/plugins/rule-compliance-checker.py.backup5",
    "data/cost_analysis.py",
    "scripts/mdc-linter.py.backup4",
    "scripts/mdc-linter.py.working",
]
