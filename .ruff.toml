# .ruff.toml
# Minimal Python linter configuration

target-version = "py39"
line-length = 88

# Enable essential rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # bandit
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "T20", # flake8-print
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "TID", # flake8-tidy-imports
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "PTH", # flake8-use-pathlib
    "LOG", # flake8-logging-format
    "G",   # flake8-logging
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "DTZ", # flake8-datetimez
    "EM",  # flake8-errmsg
    "EXE", # flake8-executable
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
]

# Ignore specific rules
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E203",  # whitespace before ':'
    "T201",  # print found
    "EXE001", # shebang present but file not executable
    "S110",  # try-except-pass detected
    "B007",  # loop control variable not used
    "PTH118", # os.path.join should be replaced by Path
    "BLE001", # do not catch blind exception
    "S603",  # subprocess call: check for execution of untrusted input
]

# Allow autofix for all rules
fixable = ["ALL"]

# Exclude files
exclude = [
    ".git",
    ".hg",
    ".mypy_cache",
    ".tox",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]
