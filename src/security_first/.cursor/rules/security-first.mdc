# Security-First Development Rules

## Security-First Architecture Guidelines

### Credential Management
- **Zero Hardcoding**: Never hardcode credentials in source code
- **Environment Variables**: Use environment variables for all secrets
- **Encryption**: Encrypt all sensitive data at rest and in transit
- **Rotation**: Implement automatic credential rotation

### Input Validation & Sanitization
- **Comprehensive Validation**: Validate all user inputs
- **SQL Injection Prevention**: Use parameterized queries
- **XSS Prevention**: Sanitize all user-generated content
- **CSRF Protection**: Implement CSRF tokens for all forms

### Session Management
- **JWT Tokens**: Use JWT for session management
- **Timeout**: Implement automatic session timeout
- **Secure Storage**: Store session data securely
- **Audit Logging**: Log all session activities

### Access Control
- **Role-Based Access**: Implement RBAC for all features
- **Least Privilege**: Grant minimum required permissions
- **Authentication**: Implement strong authentication
- **Authorization**: Validate permissions for all actions

### Security Testing
- **Static Analysis**: Use bandit and detect-secrets
- **Dynamic Testing**: Perform penetration testing
- **Vulnerability Scanning**: Regular security scans
- **Compliance**: Ensure regulatory compliance

### Code Security
- **Dependencies**: Regularly update dependencies
- **Vulnerability Scanning**: Scan for known vulnerabilities
- **Secure Coding**: Follow OWASP guidelines
- **Code Review**: Security-focused code reviews
description:
globs:
alwaysApply: false
---
